[오전 12:24:08] TCP 서버가 포트번호 5000에서 시작됐습니다.
[오전 12:24:17] 클라이언트 연결됨: 192.168.45.217
[오전 12:24:22] 대회 시작 메세지를 클라이언트들에게 전송함.
[오전 12:24:34] 192.168.45.217로 부터 답이 수신됨
[오전 12:24:34] 문제: 1
[오전 12:24:34] 답: 4
[오전 12:24:34] test의 점수가 4로 업데이트 됨.
[오전 12:24:35] 192.168.45.217로 부터 답이 수신됨
[오전 12:24:35] 답: 3
[오전 12:24:35] 문제: 2
[오전 12:24:35] test의 점수가 8로 업데이트 됨.
[오전 12:24:36] 답: 1
[오전 12:24:36] 192.168.45.217로 부터 답이 수신됨
[오전 12:24:36] 문제: 3
[오전 12:24:36] test의 점수가 10로 업데이트 됨.
[오전 12:24:49] 192.168.45.217로 부터 답이 수신됨
[오전 12:24:49] 문제: 4
[오전 12:24:49] 답: #include <stdio.h>
int main(void)
{
 printf("Hello");
 return 0;
}
[오전 12:24:51] test의 점수가 13로 업데이트 됨.
[오전 12:25:00] 192.168.45.217로 부터 답이 수신됨
[오전 12:25:00] 문제: 5
[오전 12:25:00] 답: #include <stdio.h>

int main(void)
{
	int input;
	scanf("%d", &input);

	for (int i = 1; i <= input; i++)
	{
		for (int j = 0; j < i; j++)
		{
			printf("*");
		}
		printf("\n");
	}
}
[오전 12:25:02] test의 점수가 14로 업데이트 됨.
[오전 12:25:20] 192.168.45.217로 부터 답이 수신됨
[오전 12:25:20] 문제: 6
[오전 12:25:20] 답: #include <stdio.h>

int main(void)
{
    int input;
    scanf("%d", &input);

    int array[100];  // 충분한 크기의 배열 확보 (예: 입력이 100 이하인 경우)

    for (int i = 0; i < input; i++)
    {
        scanf("%d", &array[i]);
    }

    int min = 0, max = 0;
    for (int j = 0; j < input; j++)
    {
        if (array[min] > array[j])
            min = j;
        if (array[max] < array[j])
            max = j;
    }

    printf("%d %d", array[min], array[max]);
}
[오전 12:25:22] test의 점수가 15로 업데이트 됨.
[오전 12:25:30] 192.168.45.217로 부터 답이 수신됨
[오전 12:25:30] 문제: 7
[오전 12:25:30] 답: #include <stdio.h>

// 포인터를 사용해 두 정수의 값을 교환하는 함수
void swap(int *x, int *y) {
    int temp = *x;
    *x = *y;
    *y = temp;
}

int main(void) {
    int a, b;
    scanf("%d %d", &a, &b);
    
    swap(&a, &b);  // 주소를 전달하여 값을 교환

    printf("%d %d\n", a, b);  // 교환된 값 출력

    return 0;
}
[오전 12:25:33] test의 점수가 17로 업데이트 됨.
[오전 12:25:41] 192.168.45.217로 부터 답이 수신됨
[오전 12:25:41] 문제: 8
[오전 12:25:41] 답: #include <stdio.h>
#include <string.h>

int main(void) {
    char s[1001];
    int i;

    scanf("%s", s);
    scanf("%d", &i);

    printf("%c\n", s[i - 1]);  // C는 0부터 인덱싱
    return 0;
}
[오전 12:25:43] test의 점수가 19로 업데이트 됨.
[오전 12:26:10] 192.168.45.217의 연결이 끊어졌습니다.
[오전 12:51:36] TCP 서버가 포트번호 5000에서 시작됐습니다.
[오전 12:51:48] 클라이언트 연결됨: 192.168.45.217
[오전 12:51:52] 대회 시작 메세지를 클라이언트들에게 전송함.
[오전 12:51:54] 192.168.45.217로 부터 답이 수신됨
[오전 12:51:54] 문제: 1
[오전 12:51:54] 답: 4
[오전 12:51:54] test의 점수가 3로 업데이트 됨.
[오전 12:51:55] 192.168.45.217로 부터 답이 수신됨
[오전 12:51:55] 문제: 2
[오전 12:51:55] 답: 3
[오전 12:51:55] test의 점수가 5로 업데이트 됨.
[오전 12:51:56] 문제: 3
[오전 12:51:56] test의 점수가 9로 업데이트 됨.
[오전 12:51:56] 답: 1
[오전 12:51:56] 192.168.45.217로 부터 답이 수신됨
[오전 12:52:12] 192.168.45.217로 부터 답이 수신됨
[오전 12:52:12] 문제: 4
[오전 12:52:12] 답: #include <stdio.h>
int main(void)
{
  printf("Hello");
}
[오전 12:52:15] test의 점수가 10로 업데이트 됨.
[오전 12:53:13] 192.168.45.217로 부터 답이 수신됨
[오전 12:53:13] 문제: 5
[오전 12:53:13] 답: #include <stdio.h>

int main(void)
{
  int input;
  
  scanf("%d", &s);
  
  for(int i = 1; i <= input; i++)
  {
    for(int j = 0; j < i; j++)
    {
      printf("*");
    }
    printf("\n");
  }
  return 0;
}
[오전 12:53:13] test의 점수가 10로 업데이트 됨.
[오전 12:53:57] 문제: 6
[오전 12:53:57] 답: #include <stdio.h>

int main(void)
{
    int input;
    scanf("%d", &input);

    int array[100];  // 충분한 크기의 배열 확보 (예: 입력이 100 이하인 경우)

    for (int i = 0; i < input; i++)
    {
        scanf("%d", &array[i]);
    }

    int min = 0, max = 0;
    for (int j = 0; j < input; j++)
    {
        if (array[min] > array[j])
            min = j;
        if (array[max] < array[j])
            max = j;
    }

    printf("%d %d", array[min], array[max]);
}
[오전 12:53:57] 192.168.45.217로 부터 답이 수신됨
[오전 12:53:59] test의 점수가 12로 업데이트 됨.
[오전 12:54:05] 192.168.45.217로 부터 답이 수신됨
[오전 12:54:05] 문제: 7
[오전 12:54:05] 답: #include <stdio.h>

// 포인터를 사용해 두 정수의 값을 교환하는 함수
void swap(int *x, int *y) {
    int temp = *x;
    *x = *y;
    *y = temp;
}

int main(void) {
    int a, b;
    scanf("%d %d", &a, &b);
    
    swap(&a, &b);  // 주소를 전달하여 값을 교환

    printf("%d %d\n", a, b);  // 교환된 값 출력

    return 0;
}
[오전 12:54:08] test의 점수가 15로 업데이트 됨.
[오전 12:54:19] 192.168.45.217로 부터 답이 수신됨
[오전 12:54:19] 문제: 8
[오전 12:54:19] 답: #include <stdio.h>
#include <string.h>

int main(void) {
    char s[1001];
    int i;

    scanf("%s", s);
    scanf("%d", &i);

    printf("%c\n", s[i - 1]);  // C는 0부터 인덱싱
    return 0;
}
[오전 12:54:22] test의 점수가 16로 업데이트 됨.
[오전 12:54:32] 192.168.45.217로 부터 답이 수신됨
[오전 12:54:32] 문제: 9
[오전 12:54:32] 답: #include <stdio.h>

int main(void) {
    int n, scores[100], sum = 0, count = 0;
    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        scanf("%d", &scores[i]);
        sum += scores[i];
    }

    double avg = (double)sum / n;

    for (int i = 0; i < n; i++) {
        if (scores[i] >= avg) {
            count++;
        }
    }

    printf("%d\n", count);
    return 0;
}
[오전 12:54:34] test의 점수가 18로 업데이트 됨.
[오전 12:54:45] 192.168.45.217로 부터 답이 수신됨
[오전 12:54:45] 문제: 10
[오전 12:54:45] 답: #include <stdio.h>

int reverse(int num) {
    int reversed = 0;
    while (num > 0) {
        reversed = reversed * 10 + (num % 10);
        num /= 10;
    }
    return reversed;
}

int main(void) {
    int a, b;
    scanf("%d %d", &a, &b);

    // 두 숫자를 뒤집고 더 큰 값을 출력
    int revA = reverse(a);
    int revB = reverse(b);

    if (revA > revB) {
        printf("%d\n", revA);
    } else {
        printf("%d\n", revB);
    }

    return 0;
}
[오전 12:54:47] test의 점수가 20로 업데이트 됨.
[오전 12:55:34] 1등 | test | 20
[오전 12:55:34] 🏆 1, 2, 3등:
[오전 12:55:34] 1등 | test | 20
[오전 12:55:34] ============
[오전 12:55:34] ============
[오전 12:55:34] 📊 최종 순위:
[오전 12:55:47] 192.168.45.217의 연결이 끊어졌습니다.
[오전 12:56:34] 클라이언트 연결됨: 192.168.45.217
[오전 12:56:35] 대회 시작 메세지를 클라이언트들에게 전송함.
[오전 12:56:43] 192.168.45.217로 부터 답이 수신됨
[오전 12:56:43] 답: 4
[오전 12:56:43] 문제: 1
[오전 12:56:43] test의 점수가 1로 업데이트 됨.
[오전 12:56:45] 192.168.45.217로 부터 답이 수신됨
[오전 12:56:45] 문제: 2
[오전 12:56:45] 답: 3
[오전 12:56:45] test의 점수가 3로 업데이트 됨.
[오전 12:56:46] 192.168.45.217로 부터 답이 수신됨
[오전 12:56:46] 문제: 3
[오전 12:56:46] 답: 1
[오전 12:56:46] test의 점수가 5로 업데이트 됨.
[오전 12:56:59] 192.168.45.217로 부터 답이 수신됨
[오전 12:56:59] 문제: 4
[오전 12:56:59] 답: #include <stdio.h>
int main(void)
{
  printf("He")
}
[오전 12:57:00] test의 점수가 5로 업데이트 됨.
[오전 12:57:12] 192.168.45.217로 부터 답이 수신됨
[오전 12:57:12] 문제: 5
[오전 12:57:12] 답: #include <stdio.h>

int main(void)
{
	int input;
	scanf("%d", &input);

	for (int i = 1; i <= input; i++)
	{
		for (int j = 0; j < i; j++)
		{
			printf("*");
		}
		printf("\n");
	}
}
[오전 12:57:14] test의 점수가 7로 업데이트 됨.
[오전 12:57:26] 192.168.45.217로 부터 답이 수신됨
[오전 12:57:26] 문제: 6
[오전 12:57:26] 답: #include <stdio.h>

int main(void)
{
    int input;
    scanf("%d", &input);

    int array[100];  // 충분한 크기의 배열 확보 (예: 입력이 100 이하인 경우)

    for (int i = 0; i < input; i++)
    {
        scanf("%d", &array[i]);
    }

    int min = 0, max = 0;
    for (int j = 0; j < input; j++)
    {
        if (array[min] < array[j])
            min = j;
        if (array[max] > array[j])
            max = j;
    }

    printf("%d %d", array[min], array[max]);
}
[오전 12:57:28] test의 점수가 7로 업데이트 됨.
[오전 12:57:45] 192.168.45.217로 부터 답이 수신됨
[오전 12:57:45] 문제: 7
[오전 12:57:45] 답: #include <stdio.h>

// 포인터를 사용해 두 정수의 값을 교환하는 함수
void swap(int *x, int *y) {
    int temp = *x;
    *x = *y;
    *y = temp;
}

int main(void) {
    int a, b;
    scanf("%d %d", &a, &b);
    
    swap(&a, &b);  // 주소를 전달하여 값을 교환

    printf("%d %d\n", b, a);  // 교환된 값 출력

    return 0;
}
[오전 12:57:47] test의 점수가 7로 업데이트 됨.
[오전 12:57:57] 192.168.45.217로 부터 답이 수신됨
[오전 12:57:57] 문제: 8
[오전 12:57:57] 답: #include <stdio.h>
#include <string.h>

int main(void) {
    char s[1001];
    int i;

    scanf("%s", s);
    scanf("%d", &i);

    printf("%c\n", s[i]);  // C는 0부터 인덱싱
    return 0;
}
[오전 12:57:59] test의 점수가 7로 업데이트 됨.
[오전 12:58:16] 192.168.45.217로 부터 답이 수신됨
[오전 12:58:16] 문제: 9
[오전 12:58:16] 답: #include <stdio.h>

int main(void) {
    int n, scores[100], sum = 0, count = 0;
    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        scanf("%d", &scores[i]);
        sum += scores[i];
    }

    double avg = (double)sum / n;

    for (int i = 0; i < n; i++) {
        if (scores[i] <= avg) {
            count++;
        }
    }

    printf("%d\n", count);
    return 0;
}
[오전 12:58:17] test의 점수가 7로 업데이트 됨.
[오전 12:58:30] 192.168.45.217로 부터 답이 수신됨
[오전 12:58:30] 문제: 10
[오전 12:58:30] 답: #include <stdio.h>

int reverse(int num) {
    int reversed = 0;
    while (num > 0) {
        reversed = reversed * 10 + (num % 10);
        num /= 10;
    }
    return reversed;
}

int main(void) {
    int a, b;
    scanf("%d %d", &a, &b);

    // 두 숫자를 뒤집고 더 큰 값을 출력
    int revA = reverse(a);
    int revB = reverse(b);

    if (revA < revB) {
        printf("%d\n", revA);
    } else {
        printf("%d\n", revB);
    }

    return 0;
}
[오전 12:58:31] test의 점수가 7로 업데이트 됨.
